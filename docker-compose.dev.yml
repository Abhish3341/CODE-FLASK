version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: codeflask-mongodb-dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: codeflask
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data_dev:/data/db
    networks:
      - codeflask-network-dev
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Backend API with Compiler Service
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: codeflask-backend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 8000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/codeflask?authSource=admin
      SECRET_KEY: dev-secret-key
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      FRONTEND_URL: http://localhost:5173
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
    ports:
      - "8000:8000"
    depends_on:
      - mongodb
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
      - /var/run/docker.sock:/var/run/docker.sock
      - ./backend/temp:/usr/src/app/temp
    command: npm run dev
    networks:
      - codeflask-network-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  mongodb_data_dev:

networks:
  codeflask-network-dev:
    driver: bridge